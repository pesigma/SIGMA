/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tolteco.sigma.view.version;

import java.util.logging.Level;
import tolteco.sigma.model.dao.DatabaseException;
import tolteco.sigma.model.entidades.Major;
import tolteco.sigma.model.entidades.Minor;
import tolteco.sigma.model.entidades.Version;
import tolteco.sigma.view.MainFrame;
import tolteco.sigma.view.interfaces.Adicionar;

/**
 * Painel de adição de clientes.
 * @author Juliano Felipe
 */
public class AdicionarVersion extends javax.swing.JPanel implements Adicionar<Version>{
    private final MainVersion MAIN;
    
    /**
     * Creates new form Version
     * @param main
     */
    public AdicionarVersion(MainVersion main) {
        initComponents();
        this.MAIN = main;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MajorNamePanel = new javax.swing.JPanel();
        MajorNome = new javax.swing.JTextField();
        TelPanel = new javax.swing.JPanel();
        MinorDate = new com.toedter.calendar.JDateChooser();
        CPFPanel = new javax.swing.JPanel();
        MajorVer = new javax.swing.JSpinner();
        lastMajor = new javax.swing.JButton();
        MajorDatePanel = new javax.swing.JPanel();
        MajorDate = new com.toedter.calendar.JDateChooser();
        MajorObsPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MajorNotes = new javax.swing.JTextPane();
        saveMajor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cleanMajor = new javax.swing.JButton();
        ObsPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        MinorNotes = new javax.swing.JTextPane();
        cleanMinor = new javax.swing.JButton();
        saveMinor = new javax.swing.JButton();

        MajorNamePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Major Nome"));

        javax.swing.GroupLayout MajorNamePanelLayout = new javax.swing.GroupLayout(MajorNamePanel);
        MajorNamePanel.setLayout(MajorNamePanelLayout);
        MajorNamePanelLayout.setHorizontalGroup(
            MajorNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MajorNome)
        );
        MajorNamePanelLayout.setVerticalGroup(
            MajorNamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MajorNamePanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(MajorNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        TelPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Minor Date"));

        javax.swing.GroupLayout TelPanelLayout = new javax.swing.GroupLayout(TelPanel);
        TelPanel.setLayout(TelPanelLayout);
        TelPanelLayout.setHorizontalGroup(
            TelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MinorDate, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
        );
        TelPanelLayout.setVerticalGroup(
            TelPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TelPanelLayout.createSequentialGroup()
                .addComponent(MinorDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        CPFPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Minor - Linked Major"));

        lastMajor.setText("Last");
        lastMajor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastMajorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CPFPanelLayout = new javax.swing.GroupLayout(CPFPanel);
        CPFPanel.setLayout(CPFPanelLayout);
        CPFPanelLayout.setHorizontalGroup(
            CPFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPFPanelLayout.createSequentialGroup()
                .addComponent(MajorVer, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastMajor)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        CPFPanelLayout.setVerticalGroup(
            CPFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CPFPanelLayout.createSequentialGroup()
                .addGroup(CPFPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MajorVer)
                    .addComponent(lastMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        MajorDatePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Major Date"));

        javax.swing.GroupLayout MajorDatePanelLayout = new javax.swing.GroupLayout(MajorDatePanel);
        MajorDatePanel.setLayout(MajorDatePanelLayout);
        MajorDatePanelLayout.setHorizontalGroup(
            MajorDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MajorDate, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
        );
        MajorDatePanelLayout.setVerticalGroup(
            MajorDatePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MajorDatePanelLayout.createSequentialGroup()
                .addComponent(MajorDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 3, Short.MAX_VALUE))
        );

        MajorObsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Major Notes"));

        MajorNotes.setToolTipText("Qualquer observação adicional sobre o cliente");
        jScrollPane2.setViewportView(MajorNotes);

        javax.swing.GroupLayout MajorObsPanelLayout = new javax.swing.GroupLayout(MajorObsPanel);
        MajorObsPanel.setLayout(MajorObsPanelLayout);
        MajorObsPanelLayout.setHorizontalGroup(
            MajorObsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        MajorObsPanelLayout.setVerticalGroup(
            MajorObsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
        );

        saveMajor.setText("Salvar Major");
        saveMajor.setMaximumSize(new java.awt.Dimension(75, 23));
        saveMajor.setMinimumSize(new java.awt.Dimension(75, 23));
        saveMajor.setPreferredSize(new java.awt.Dimension(75, 23));
        saveMajor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMajorActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/tolteco/sigma/view/images/General/Internal/Add.png"))); // NOI18N

        cleanMajor.setText("Limpar Major");
        cleanMajor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanMajorActionPerformed(evt);
            }
        });

        ObsPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Minor Notes"));

        MinorNotes.setToolTipText("Qualquer observação adicional sobre o cliente");
        jScrollPane3.setViewportView(MinorNotes);

        javax.swing.GroupLayout ObsPanel1Layout = new javax.swing.GroupLayout(ObsPanel1);
        ObsPanel1.setLayout(ObsPanel1Layout);
        ObsPanel1Layout.setHorizontalGroup(
            ObsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3)
        );
        ObsPanel1Layout.setVerticalGroup(
            ObsPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 265, Short.MAX_VALUE)
        );

        cleanMinor.setText("Limpar Minor");
        cleanMinor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanMinorActionPerformed(evt);
            }
        });

        saveMinor.setText("Salvar Minor");
        saveMinor.setMaximumSize(new java.awt.Dimension(75, 23));
        saveMinor.setMinimumSize(new java.awt.Dimension(75, 23));
        saveMinor.setPreferredSize(new java.awt.Dimension(75, 23));
        saveMinor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMinorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cleanMajor)
                        .addGap(118, 118, 118)
                        .addComponent(saveMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(MajorNamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MajorDatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(MajorObsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(CPFPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ObsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cleanMinor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveMinor, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MajorNamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CPFPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MajorDatePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(TelPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MajorObsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ObsPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cleanMajor)
                    .addComponent(saveMinor, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cleanMinor))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveMajorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMajorActionPerformed
        try {
            MAIN.getController().createMajorRelease(getMajor());
        } catch (DatabaseException ex) {
            MainFrame.LOG.log(Level.SEVERE, null, ex);
            MAIN.displayDatabaseException(ex);
        }
    }//GEN-LAST:event_saveMajorActionPerformed

    private void cleanMajorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanMajorActionPerformed
        cleanMajor();
    }//GEN-LAST:event_cleanMajorActionPerformed

    private void cleanMinorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanMinorActionPerformed
        cleanMinor();
    }//GEN-LAST:event_cleanMinorActionPerformed

    private void saveMinorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMinorActionPerformed
       asfçlaskdfjçlsdkaf
               sdaf
               sdaf
                       asdf
                       asfd
                               
    }//GEN-LAST:event_saveMinorActionPerformed

    private void lastMajorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastMajorActionPerformed
        MajorVer.setValue((int) MAIN.getController().);
    }//GEN-LAST:event_lastMajorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CPFPanel;
    private com.toedter.calendar.JDateChooser MajorDate;
    private javax.swing.JPanel MajorDatePanel;
    private javax.swing.JPanel MajorNamePanel;
    private javax.swing.JTextField MajorNome;
    private javax.swing.JTextPane MajorNotes;
    private javax.swing.JPanel MajorObsPanel;
    private javax.swing.JSpinner MajorVer;
    private com.toedter.calendar.JDateChooser MinorDate;
    private javax.swing.JTextPane MinorNotes;
    private javax.swing.JPanel ObsPanel1;
    private javax.swing.JPanel TelPanel;
    private javax.swing.JButton cleanMajor;
    private javax.swing.JButton cleanMinor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton lastMajor;
    private javax.swing.JButton saveMajor;
    private javax.swing.JButton saveMinor;
    // End of variables declaration//GEN-END:variables

    private static final String EMPTY="";
    
    public void cleanMajor(){
        MajorNome.setText(EMPTY);
        MajorDate.setDate(null);
        MajorNotes.setText(EMPTY);
    }
    
    public void cleanMinor(){
        MajorVer.setValue(0);
        MinorDate.setDate(null);
        MinorNotes.setText(EMPTY);
    }
    
    @Override
    public void cleanAllFields() {
        cleanMajor();
        cleanMinor();
    }

    @Override
    public void fillAllFields(Version object) {
        MajorNome.setText(object.getMajorName());
        MajorDate.setDate(object.getMajorDate());
        MajorNotes.setText(object.getMajorNotes());
        
        MajorVer.setValue(object.getMajorVersion());
        MinorDate.setDate(object.getMinorDate());
        MinorNotes.setText(object.getMinorNotes());
    }

    @Override
    public Version getInstance() {
        return new Version((int)MajorVer.getValue(), 
                MajorNome.getText(), 
                MajorDate.getDate(), 
                MajorNotes.getText(), 
                -1, 
                MinorDate.getDate(), 
                MinorNotes.getText());
    }
    
    public Major getMajor(){
        return new Major(-1, 
                MajorNome.getText(), 
                MajorDate.getDate(), 
                MajorNotes.getText());
    }
    
    public Minor getMinor(){
        return new Minor((int) MajorVer.getValue(), -1, 
                MinorDate.getDate(), 
                MinorNotes.getText());
    }
}
