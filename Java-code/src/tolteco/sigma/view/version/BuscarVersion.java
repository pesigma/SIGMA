/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tolteco.sigma.view.version;

import java.util.Collection;
import java.util.List;
import javax.swing.JOptionPane;
import net.java.balloontip.BalloonTip;
import tolteco.sigma.model.dao.DatabaseException;
import tolteco.sigma.model.entidades.Version;
import tolteco.sigma.model.entidades.Version;
import tolteco.sigma.model.tables.VersionTable;
import tolteco.sigma.utils.SDate;
import tolteco.sigma.utils.eventsAndListeners.ChangePropertyEvent;
import tolteco.sigma.utils.eventsAndListeners.DeletionEvent;
import tolteco.sigma.utils.eventsAndListeners.InsertionEvent;
import tolteco.sigma.view.MainFrame;
import tolteco.sigma.view.interfaces.Buscar;

/**
 * Painel de busca de clientes.
 * Podem ser buscados por diversos
 * atributos (nome, id, etc).
 * @author Juliano Felipe
 */
public class BuscarVersion extends javax.swing.JPanel implements Buscar<Version>{
    private final MainVersion MAIN;
    private final ResultsTableModel modeloTabela = new ResultsTableModel();
    
    /**
     * Creates new form BuscarVersion
     * @param main
     */
    public BuscarVersion(MainVersion main) {
        initComponents();
        MAIN = main;
        tabela.setModel(modeloTabela);
        tabela.setAutoCreateRowSorter(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        searchPanel = new javax.swing.JPanel();
        majorName = new javax.swing.JTextField();
        majorVer = new javax.swing.JSpinner();
        minorVer = new javax.swing.JSpinner();
        isMajorDate = new javax.swing.JCheckBox();
        isMajorNome = new javax.swing.JCheckBox();
        MajorDate = new com.toedter.calendar.JDateChooser();
        isMajorVer = new javax.swing.JCheckBox();
        isMinorVer = new javax.swing.JCheckBox();
        Buscar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        Delete = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        tabela.setModel(modeloTabela);
        jScrollPane1.setViewportView(tabela);

        searchPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        isMajorDate.setText("Major Date");
        isMajorDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMajorDateActionPerformed(evt);
            }
        });

        isMajorNome.setText("Major Name");
        isMajorNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMajorNomeActionPerformed(evt);
            }
        });

        isMajorVer.setText("Major Ver");
        isMajorVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMajorVerActionPerformed(evt);
            }
        });

        isMinorVer.setText("Minor Ver");
        isMinorVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isMinorVerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(isMajorDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(isMajorNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(majorName)
                    .addComponent(MajorDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(isMinorVer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(isMajorVer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(majorVer, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                    .addComponent(minorVer))
                .addContainerGap(264, Short.MAX_VALUE))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(majorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(majorVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isMajorNome)
                    .addComponent(isMajorVer))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(minorVer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(isMajorDate)
                        .addComponent(isMinorVer))
                    .addComponent(MajorDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Buscar.setText("Buscar");
        Buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarActionPerformed(evt);
            }
        });

        jLabel1.setText("*Marque as caixas para pesquisar com os filtros.");

        Delete.setText("Excluir");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        Edit.setText("Editar");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        jButton1.setText("Limpar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(Edit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Delete)
                        .addGap(41, 41, 41)
                        .addComponent(Buscar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 335, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Delete)
                        .addComponent(Edit)
                        .addComponent(jButton1))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean changed=false;
    
    private void BuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarActionPerformed
        if (isMinorVer.isSelected() == false &&
            isMajorDate.isSelected() == false &&
            isMajorVer.isSelected() == false &&
            isMajorNome.isSelected() == false){ //Nenhum filtro selecionado
            
            BalloonTip tooltipBalloon = new BalloonTip(Buscar, "Selecione pelo menos um filtro.");
            tooltipBalloon.setVisible(true);
            return;
        }
        
        if (!changed) return; //Se não mudou os estados dos campos, não há por que procuarar...

        modeloTabela.removeAll();
        
        boolean flag; 
        short times; //Se um for falso, nao verifica os outros
        
        List<Version> data=null;
        Version temp;
        //Identificadores únicos, não precisa procurar com outros
        if (isMajorVer.isSelected()){
            try {
                temp = Version.versionBuilder(
                        MAIN.getController().getMajor((int) majorVer.getValue()),
                        MAIN.getController().getLatestMinor((int) majorVer.getValue()));
                if (temp != null) modeloTabela.addRow(temp);
                else{
                    BalloonTip tooltipBalloon = new BalloonTip(Buscar, "Nada encontrado.");
                    tooltipBalloon.setVisible(true);
                }
                
                return;
            } catch (DatabaseException ex) {
                MainFrame.LOG.severe(ex.getLocalizedMessage());
            }
        }  else {
            try {
                data = MAIN.getController().selectAll();
                if (data == null){
                    BalloonTip tooltipBalloon = new BalloonTip(Buscar, "Nada encontrado.");
                    tooltipBalloon.setVisible(true);
                    return;
                }
            } catch (DatabaseException ex) {
                MainFrame.LOG.severe(ex.getLocalizedMessage());
            }
        }
        
        for (Version version : data){
            flag=true; times=0; //Tem que ser true em todas as verifs. para ser add
            if (isMajorNome.isSelected()){
                flag = version.getMajorName().contains(majorName.getText());
                times++;
            }
            endIF: if (isMajorDate.isSelected()){
                if (flag==false && times!=0) break endIF;
                flag = SDate.DATE_FORMAT_NOTIME.format( version.getMajorDate() ).equals(
                       SDate.DATE_FORMAT_NOTIME.format( MajorDate.getDate() )
                );
                times++;
            }
            idUserIF: if (isMinorVer.isSelected()){
                if (flag==false && times!=0) break idUserIF;
                flag = version.getMinorVersion() == ((int) minorVer.getValue());
                times++;
            }
            if (flag==true && times!=0) modeloTabela.addRow(version);
        }

        changed=true;
    }//GEN-LAST:event_BuscarActionPerformed

    // <editor-fold defaultstate="collapsed" desc="Event changed...">
    private void isMajorNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMajorNomeActionPerformed
        changed = true;
    }//GEN-LAST:event_isMajorNomeActionPerformed

    private void isMajorDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMajorDateActionPerformed
        changed = true;
    }//GEN-LAST:event_isMajorDateActionPerformed

    private void isMinorVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMinorVerActionPerformed
        changed = true;
    }//GEN-LAST:event_isMinorVerActionPerformed

    private void isMajorVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isMajorVerActionPerformed
        changed = true;
    }//GEN-LAST:event_isMajorVerActionPerformed
    //</editor-fold>
    
    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        int row = tabela.getSelectedRow();
        if (row>=0){
            JOptionPane.showMessageDialog(null, "Edição de versões não disponível.", "Finalizando...", JOptionPane.ERROR_MESSAGE);
        } else {
            BalloonTip tooltipBalloon = new BalloonTip(Edit, "Selecione uma linha para poder editar.");
            tooltipBalloon.setVisible(true);
        }
    }//GEN-LAST:event_EditActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        int row = tabela.getSelectedRow();
        if (row>=0){
            JOptionPane.showMessageDialog(null, "Deleção de versões não disponível.", "Finalizando...", JOptionPane.ERROR_MESSAGE);
        } else {
            BalloonTip tooltipBalloon = new BalloonTip(Delete, "Selecione uma linha para poder excluir.");
            tooltipBalloon.setVisible(true);
        }
    }//GEN-LAST:event_DeleteActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cleanAllFields();
    }//GEN-LAST:event_jButton1ActionPerformed
    
    
    public static final String EMPTY=null;
    public static final boolean NOT_SELECTED=false;
    
    @Override
    public void cleanAllFields() {      
        majorName.setText(EMPTY);
        MajorDate.setDate(null);
        majorVer.setValue(0);
        minorVer.setValue(0);
        
        isMajorNome.setSelected(NOT_SELECTED);
        isMajorDate.setSelected(NOT_SELECTED);
        isMinorVer.setSelected(NOT_SELECTED);
        isMajorVer.setSelected(NOT_SELECTED);
    }

    @Override
    public void fillAllFields(Version object) {
        modeloTabela.addRow(object);
    }

    @Override
    public Version getInstance() {
        int row = tabela.getSelectedRow();
        Version version = null;
        if (row>=0){
            int versionId = (int) tabela.getValueAt(row, VersionTable.MAJOR_VER);
            version = MAIN.getModel().getRowById(versionId);
        } else {
            //Nunca deverá entrar aqui (Tem verificação "elsewhere").
            BalloonTip tooltipBalloon = new BalloonTip(tabela, "Selecione uma linha para poder concluir a operação.");
            tooltipBalloon.setVisible(true);
        }
        return version;
    }

    private class ResultsTableModel extends VersionTable{
        private void removeAll(){
            super.getList().clear();
        }
        
        @Override
        public void setRow(Version object, int row){
            entidades.add(row, object);
            fireTableRowsDeleted(row, row);
            fireChangeProperty(new ChangePropertyEvent(object));
        }

        @Override
        public void setRow(Version object) throws DatabaseException{
            int indexToUpdate = -1;
            int counter=0;
            for(Version entidade : entidades){
                if (entidade.getRowId() == object.getRowId()){
                    indexToUpdate = counter;
                    break;
                }
                counter++;
            }

            if (indexToUpdate == -1){
                throw new DatabaseException("Objeto inexistente na tabela de "
                      + object.getClass() + ". Impossível atualizar.");
            }

            entidades.set(indexToUpdate, object);
            fireChangeProperty(new ChangePropertyEvent(object));
            fireTableRowsDeleted(indexToUpdate, indexToUpdate);
        }

        @Override
        public void addRow(Version object){
            entidades.add(object);
            final int LASTROW = entidades.size()-1;
            fireTableRowsInserted(LASTROW, LASTROW);
            fireInsertion(new InsertionEvent(object));
        }

        @Override
        public void addAll(Collection<Version> lista){
            entidades.addAll(lista);
            fireTableDataChanged();
        }

        @Override
        public void removeRow(Version object){
            int indexToUpdate = -1;
            int counter=0;
            for(Version entidade : entidades){
                if (entidade.equals(object)){
                    indexToUpdate = counter;
                    break;
                }
                counter++;
            }
        }

        @Override
        public void removeRow(int row){
            Version object = entidades.get(row);
            entidades.remove(row);
            fireDeletion(new DeletionEvent(object));
            fireTableRowsDeleted(row, row);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buscar;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private com.toedter.calendar.JDateChooser MajorDate;
    private javax.swing.JCheckBox isMajorDate;
    private javax.swing.JCheckBox isMajorNome;
    private javax.swing.JCheckBox isMajorVer;
    private javax.swing.JCheckBox isMinorVer;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField majorName;
    private javax.swing.JSpinner majorVer;
    private javax.swing.JSpinner minorVer;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
